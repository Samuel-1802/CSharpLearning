@page "/prueba"
@using static BlazorApp1.Shared.MainLayout
@layout BlazorApp1.Shared.ComponentLayout

<PageTitle>Prueba</PageTitle>

<h1>Prueba</h1>

<p>La variable está activada?</p> @if (@variable) { <p>Sí</p> } else { <p>No</p> }


    @if (variable)
    {
        <button class="btn btn-primary" @onclick="Toggle">Desactivar</button>
    } else
    {
        <button class="btn btn-primary" @onclick="Toggle">Activar</button>
    }

<hr />

<h1>Calculadora</h1>
<p>Calculador básica que realiza adición, substracción, multiplicación y división</p>

<input class="form-control" type="number" @bind="num1">
<br />
<input class="form-control" type="number" @bind="num2">

<br />

<button class="btn btn-primary" @onclick="@(e => Add(num1, num2))">Sumar</button>
<button class="btn btn-primary" @onclick="@(e => Substract(num1, num2))">Restar</button>
<button class="btn btn-primary" @onclick="@(e => Multiply(num1, num2))">Multiplicar</button>
<button class="btn btn-primary" @onclick="@(e => Divide(num1, num2))">Dividir</button>

<br />
<br />

@if(@error == "")
{
    <p>Resultado: @result</p>
} else
{
    <p>@error</p>
}

<hr />

<h1>Prueba SQL</h1>

<p>Ingresar nombre y apellido a una base de datos SQL Server.</p>

@*<input class="form-control" type="text" @bind="nombre" @bind:event="oninput" placeholder="Nombre">
<br />
<input class="form-control" type="text" @bind="apellido" @bind:event="oninput" placeholder="Apellido">

<br />

@if (@nombre == "" || @apellido == "")
{
    <button class="btn btn-primary" @onclick="Insert" disabled>Agregar</button>
} else
{
    <button class="btn btn-primary" @onclick="Insert">Agregar</button>
}*@

<EditForm Model="@Form" OnValidSubmit="@Insert">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <InputText class="form-control" id="nombre" @bind-Value="Form.nombre" />
    <br />
    <InputText class="form-control" id="apellido" @bind-Value="Form.apellido" />
    <br />
    <button type="submit" class="btn btn-primary">Agregar</button>
</EditForm>

<br />
<br />

<hr />

<h1>CascadingParameter</h1>
testValue.name = @testValue.name

@code {

    // Variables
    private Boolean variable = false;
    private decimal num1 = 0;
    private decimal num2 = 0;
    private decimal result = 0;
    private string error = "";
    //private string nombre = "";
    //private string apellido = "";
    private FormModel Form = new();

    // Valor en cascada
    [CascadingParameter (Name = "testValue")]
    protected testCascadingClass? testValue { get; set; }

    public class FormModel
    {
        [Required]
        public string? nombre { get; set; }

        [Required]
        public string? apellido { get; set; }
    }

    // Función de botón
    private void Toggle()
    {
        variable = !variable;
    }

    // Funciones de calculadora
    private void Add(decimal num1, decimal num2)
    {
        error = "";
        result = num1 + num2;
    }

    private void Substract(decimal num1, decimal num2)
    {
        error = "";
        result = num1 - num2;
    }

    private void Multiply(decimal num1, decimal num2)
    {
        error = "";
        result = num1 * num2;
    }

    private void Divide(decimal num1, decimal num2)
    {
        error = "";

        if (num2 != 0)
        {
            result = num1 / num2;
        }
        else
        {
            error = "Error: división entre 0";
        }
    }

    // Funcion SQL
    private void Insert()
    {
        // variables necesarias para crear una conexión

        // string para ingresar a la base de datos
        string sqlCredentials = @"Data Source=LAPTOP-IB97SQ55\SQLEXPRESS;Initial Catalog=winledger;User ID=sa;Password=password;Trusted_Connection=True";
        
        // conexión a la base de datos
        SqlConnection connection = new SqlConnection(sqlCredentials);

        // query insert a al base de datos
        SqlCommand command;
        SqlDataAdapter adapter = new SqlDataAdapter();
        String sql = "insert into usuarios (nombres,apellidos) values('" + Form.nombre + "','" + Form.apellido + "')";

        // ejecución del query

        // se abre la conexión
        connection.Open();

        // se ejecuta el string del query
        command = new SqlCommand(sql, connection);
        adapter.InsertCommand = new SqlCommand(sql, connection);
        adapter.InsertCommand.ExecuteNonQuery();

        // se cierra la conexión
        command.Dispose();
        connection.Close();

        // se reinician los valores de nombre y apellido
        Form.nombre = "";
        Form.apellido = "";
    }
}